/* If there is verdana font installed, it'll produce verdana, else sans-serif 
font-family: verdana, sans-serif;
https://www.cssfontstack.com/
specific -> less specific*/
:root {
    --bg-color: #66BFBF;
    --txt-color: #11999e;
}
body {
    margin: 0;
    text-align: center;
    font-family: Helvetica Neue,Helvetica,Arial,sans-serif; 
    font-family: 'Merriweather', serif;
    color: #40514E;
}

/* if there is width, center using margin: auto
if no width, text-align on the parent container should be fine 
font-size:  100% -> 16px, 1r/em->16px (rem, em, % are responsive)
font-size (em and %) -> relative to it's parent font-size, px -> fixed 
To avoid (CSS3)-> use rem (ignore parent setting) relative to root*/

h1 {
    font-size: 5.6rem;
    margin: 3.5rem auto 0;
    font-family: 'Sacramento', cursive;
    color: var(--bg-color);
}

h2 {
    font-family: 'Montserrat', sans-serif;
    font-size: 2.5rem;
    font-weight: normal;
    color: var(--bg-color);
    padding-bottom: 10px;
}

h3 {
    font-family: 'Montserrat', sans-serif;
    color: var(--txt-color);
}

p {
    line-height: 2;
    font-family: 'Montserrat', sans-serif;
}

a {
    font-family: 'Montserrat', sans-serif;
    color: var(--txt-color);
    margin: 10px 20px;
    text-decoration: none;
}

a:hover {
    color: #eaf6f6
}

hr {
    border-style: dotted none none;
    border-color: #c7d1d1;
    border-width: 5px;
    width: 3%;
    margin: 5rem auto;
}

.top__container {
    background-color: #E4F9F5;
    position: relative;
    padding-top: 100px;
}

.web {
    font-size: 20px;
}

.bio {
    width: 30%;
    margin: auto;
}

.top__cloud {
    position: absolute;
    right: 300px;
    top: 50px;
}

.bottom__cloud {
    position: absolute;
    left: 300px;
    bottom: 300px;
}

.skill-row {
    margin: 100px auto;
    width: 50%;
    text-align: left;
    position: relative;
}

.web-img {
    width: 25%;
    float: left;
    margin-right: 30px;
    background-color: #E4F9F5;
    border-radius: 2rem;
}

.team-img {
    width: 25%;
    float: right;
    margin-left: 30px;
    background-color: #E4F9F5;
    border-radius: 2rem;
}

.middle-container {
    margin: 100px 0;
}

.contact-msg {
    width: 40%;
    margin: 40px auto 60px;
}

.btn {
    background: #11cdd4;
    background-image: -webkit-linear-gradient(top, #11cdd4, var(--txt-color));
    background-image: -moz-linear-gradient(top, #11cdd4, var(--txt-color));
    background-image: -ms-linear-gradient(top, #11cdd4, var(--txt-color));
    background-image: -o-linear-gradient(top, #11cdd4, var(--txt-color));
    background-image: linear-gradient(to bottom, #11cdd4, var(--txt-color));
    -webkit-border-radius: 8;
    -moz-border-radius: 8;
    border-radius: 8px;
    font-family: 'Montserrat', sans-serif;
    color: #ffffff;
    font-size: 20px;
    padding: 10px 20px 10px 20px;
    text-decoration: none;
  }
  
.btn:hover {
    background: #30e3cb;
    background-image: -webkit-linear-gradient(top, #30e3cb, #2bc4ad);
    background-image: -moz-linear-gradient(top, #30e3cb, #2bc4ad);
    background-image: -ms-linear-gradient(top, #30e3cb, #2bc4ad);
    background-image: -o-linear-gradient(top, #30e3cb, #2bc4ad);
    background-image: linear-gradient(to bottom, #30e3cb, #2bc4ad);
    text-decoration: none;
}

.bottom-container {
    background-color:  var(--bg-color);
    padding: 50px 0 20px;
}

.copyright {
    color: #eaf6f6;
    font-size: 0.75rem;
    padding: 20px 0;
}

/* clear -> making sure left margin is clear and not wrapped around anyhting (anti-float)
.web-skill-txt {
    clear: left;
}

.team-skill-txt {
    clear: right;
}

margin, padding, border-width, border-height, width, height 

top container becomes 290 pixels instead of 200 but the width and height
of the box with the words in is still 200px
padding left right -> 50px
border left right -> 20px
margin left right -> 20px
padding only pad the comment but not bg color or bg img

width (% and rem) -> depends on parent container

.top__container {
    background-color: #C2DED1;
    width: 200px;
    height: 200px;
    padding: 25px;
    border: solid 10px;
    margin: 10px;

div {
    width: 200px;
    height: 200px;
}

.top__container {
    background-color: #C2DED1;
    padding: 20px;
    border: solid 10px;
    padding: 20px;
}

.middle__container {
    background-color: red;
    border: solid 20px;
    margin-left: 260px;
}

.bottom__container {
    background-color: yellow;
    border: solid 10px;
    margin-left: 500px;
}

display types -> block, inline, inline-block, none
    block -> whole line (h, p,...)
    inline -> only takes up as much space as it needs to in height and width (a, img, span,...)
    inline-block -> inline but can change width
    none -> remove the element completely (no space taken)
    visibility: none -> will still take space but element removed
        - can change the display properties

positioning types -> static, relative, 
    static -> default (only html)
    relative -> position relative to the static/default or the updated properties
        - does not affect the position of any other element
            -it could cover other elements
    absolute -> a closest parent container which has a relative positioning or
                parent that is not static or it is positioned relative to viewport
        - affects the position of other elements
        - margin is not considered
    fixed -> fixed to a position despite scrolling
*/
